[{"/Users/alecbongard/webdev/repos/cv-project/src/index.js":"1","/Users/alecbongard/webdev/repos/cv-project/src/App.js":"2","/Users/alecbongard/webdev/repos/cv-project/src/components/Section.js":"3","/Users/alecbongard/webdev/repos/cv-project/src/components/Field.js":"4","/Users/alecbongard/webdev/repos/cv-project/src/components/PostedField.js":"5"},{"size":232,"mtime":1678916145347,"results":"6","hashOfConfig":"7"},{"size":1731,"mtime":1679273520686,"results":"8","hashOfConfig":"7"},{"size":2759,"mtime":1679088284979,"results":"9","hashOfConfig":"7"},{"size":439,"mtime":1679087841671,"results":"10","hashOfConfig":"7"},{"size":414,"mtime":1679002703322,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"1imr69g",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"15"},"/Users/alecbongard/webdev/repos/cv-project/src/index.js",[],[],[],"/Users/alecbongard/webdev/repos/cv-project/src/App.js",["31","32"],[],"/Users/alecbongard/webdev/repos/cv-project/src/components/Section.js",["33"],[],"import react, { Component } from \"react\";\nimport Field from \"./Field\"\nimport PostedField from \"./PostedField\";\nimport uniqid from \"uniqid\";\n\nclass Section extends Component {\n    constructor(props){\n        super(props)\n\n        this.state = {\n            posted: false,\n        };\n\n        this.generateFields = this.generateFields.bind(this);\n        this.makePostComps = this.makePostComps.bind(this);\n        this.getVals = this.getVals.bind(this);\n        this.onPost = this.onPost.bind(this);\n    }\n\n\n    generateFields(vals=[]){\n        const fields = this.props.fields;\n\n        const fieldComps = fields.map((field, i)=>{\n            \n            return (\n                <Field name={field.name} labelText={field.labelText} type={field.type} key={uniqid()} val={vals[i]}></Field>\n            )\n        })\n\n        return fieldComps;\n    }\n\n    makePostComps(vals){\n        const fields = this.props.fields;\n\n        const postComps = fields.map((field, i)=>{\n           return <PostedField labelText={field.labelText} key={uniqid()} fieldText={vals[i]}></PostedField>\n        })\n\n        return postComps;\n    }\n\n    getVals(){\n        let valNodes;\n        let vals;\n\n        if(this.state.posted){\n            valNodes = document.querySelectorAll(`#${this.props.sectionID} > form > .input-wrap > input`);\n\n            vals = Array.from(valNodes).map((node, i)=>{\n                const val = node.value;\n    \n    \n                return val;\n            });\n        }else{\n            valNodes = document.querySelectorAll(`#${this.props.sectionID} > form > .field-posted > .text-posted`);\n            \n            vals = Array.from(valNodes).map((node, i)=>{\n                const val = node.textContent;\n    \n    \n                return val;\n            });\n        }\n\n        return vals;\n    }\n\n    onPost(e){\n        e.preventDefault();\n\n        if(this.state.posted){\n            this.setState({\n                posted: false,\n            })\n        }else{\n            this.setState({\n                posted: true,\n            })\n        }\n    }\n\n\n    render(){\n        let fields;\n        let vals = this.getVals();\n        let btnText;\n\n        if(!this.state.posted){\n            fields = this.generateFields(vals);\n            btnText = \"Submit Section\";\n        }else{\n            fields = this.makePostComps(vals);\n            btnText = \"Edit Section\";\n        }\n\n        return (\n            <div className=\"section\" id={this.props.sectionID}>\n                <p className=\"form-title\">{this.props.sectionName}</p>\n                <form>\n                    {fields}\n                    <button type=\"submit\" onClick={this.onPost}>{btnText}</button>\n                </form>\n\n            </div>\n        )\n    }\n}\n\nexport default Section;",[],"/Users/alecbongard/webdev/repos/cv-project/src/components/Field.js",["34","35"],[],"/Users/alecbongard/webdev/repos/cv-project/src/components/PostedField.js",["36","37"],[],"import react, { Component } from \"react\";\n\nclass PostedField extends Component {\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        return (\n            <div className=\"field-posted\">\n                <p className=\"label-posted\">{this.props.labelText}</p>\n                <p className=\"text-posted\">{this.props.fieldText}</p>\n            </div>\n        )\n    }\n}\n\nexport default PostedField;",{"ruleId":"38","severity":1,"message":"39","line":1,"column":8,"nodeType":"40","messageId":"41","endLine":1,"endColumn":13},{"ruleId":"42","severity":1,"message":"43","line":5,"column":3,"nodeType":"44","messageId":"45","endLine":7,"endColumn":4},{"ruleId":"38","severity":1,"message":"39","line":1,"column":8,"nodeType":"40","messageId":"41","endLine":1,"endColumn":13},{"ruleId":"38","severity":1,"message":"39","line":1,"column":8,"nodeType":"40","messageId":"41","endLine":1,"endColumn":13},{"ruleId":"42","severity":1,"message":"43","line":4,"column":5,"nodeType":"44","messageId":"45","endLine":6,"endColumn":6},{"ruleId":"38","severity":1,"message":"39","line":1,"column":8,"nodeType":"40","messageId":"41","endLine":1,"endColumn":13},{"ruleId":"42","severity":1,"message":"43","line":4,"column":5,"nodeType":"44","messageId":"45","endLine":6,"endColumn":6},"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor"]