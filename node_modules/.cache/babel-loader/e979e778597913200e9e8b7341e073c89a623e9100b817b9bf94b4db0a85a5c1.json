{"ast":null,"code":"var _jsxFileName = \"/Users/alecbongard/webdev/repos/cv-project/src/components/Section.js\";\nimport react, { Component } from \"react\";\nimport Field from \"./Field\";\nimport PostedField from \"./PostedField\";\nimport uniqid from \"uniqid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Section extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posted: false\n    };\n    this.generateFields = this.generateFields.bind(this);\n    this.makePostComps = this.makePostComps.bind(this);\n    this.getVals = this.getVals.bind(this);\n    this.onPost = this.onPost.bind(this);\n  }\n  generateFields() {\n    let vals = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    const fields = this.props.fields;\n    const fieldComps = fields.map((field, i) => {\n      let val = \"\";\n      if (vals[i]) {\n        val = vals[i];\n      }\n      return /*#__PURE__*/_jsxDEV(Field, {\n        name: field.name,\n        labelText: field.labelText,\n        type: field.type,\n        val: val\n      }, uniqid(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this);\n    });\n    return fieldComps;\n  }\n  makePostComps(vals) {\n    const fields = this.props.fields;\n    const postComps = fields.map((field, i) => {\n      return /*#__PURE__*/_jsxDEV(PostedField, {\n        labelText: field.labelText,\n        fieldText: vals[i]\n      }, uniqid(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 19\n      }, this);\n    });\n    return postComps;\n  }\n  getVals() {\n    let valNodes;\n    if (this.state.posted) {\n      const valNodes = document.querySelectorAll(`#${this.props.sectionID} > form > .input-wrap > input`);\n    }\n    const vals = Array.from(valNodes).map((node, i) => {\n      const val = node.value;\n      return val;\n    });\n    return vals;\n  }\n  onPost(e) {\n    e.preventDefault();\n    if (this.state.posted) {\n      this.setState({\n        posted: false\n      });\n    } else {\n      this.setState({\n        posted: true\n      });\n    }\n  }\n  render() {\n    let fields;\n    if (!this.state.posted) {\n      fields = this.generateFields();\n    } else {\n      let vals = this.getVals();\n      fields = this.makePostComps(vals);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      id: this.props.sectionID,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"form-title\",\n        children: this.props.sectionName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [fields, /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: this.onPost,\n          children: \"Submit Section\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Section;","map":{"version":3,"names":["react","Component","Field","PostedField","uniqid","jsxDEV","_jsxDEV","Section","constructor","props","state","posted","generateFields","bind","makePostComps","getVals","onPost","vals","arguments","length","undefined","fields","fieldComps","map","field","i","val","name","labelText","type","fileName","_jsxFileName","lineNumber","columnNumber","postComps","fieldText","valNodes","document","querySelectorAll","sectionID","Array","from","node","value","e","preventDefault","setState","render","className","id","children","sectionName","onClick"],"sources":["/Users/alecbongard/webdev/repos/cv-project/src/components/Section.js"],"sourcesContent":["import react, { Component } from \"react\";\nimport Field from \"./Field\"\nimport PostedField from \"./PostedField\";\nimport uniqid from \"uniqid\";\n\nclass Section extends Component {\n    constructor(props){\n        super(props)\n\n        this.state = {\n            posted: false,\n        };\n\n        this.generateFields = this.generateFields.bind(this);\n        this.makePostComps = this.makePostComps.bind(this);\n        this.getVals = this.getVals.bind(this);\n        this.onPost = this.onPost.bind(this);\n    }\n\n\n    generateFields(vals = []){\n        const fields = this.props.fields;\n\n        const fieldComps = fields.map((field, i)=>{\n            let val = \"\";\n\n            if(vals[i]){\n                val = vals[i];\n            }\n\n            return (\n                <Field name={field.name} labelText={field.labelText} type={field.type} key={uniqid()} val={val}></Field>\n            )\n        })\n\n        return fieldComps;\n    }\n\n    makePostComps(vals){\n        const fields = this.props.fields;\n\n        const postComps = fields.map((field, i)=>{\n           return <PostedField labelText={field.labelText} key={uniqid()} fieldText={vals[i]}></PostedField>\n        })\n\n        return postComps;\n    }\n\n    getVals(){\n        let valNodes\n\n        if(this.state.posted){\n            const valNodes = document.querySelectorAll(`#${this.props.sectionID} > form > .input-wrap > input`);\n        }\n        \n        const vals = Array.from(valNodes).map((node, i)=>{\n            const val = node.value;\n\n\n            return val;\n        });\n\n        return vals;\n    }\n\n    onPost(e){\n        e.preventDefault();\n\n        if(this.state.posted){\n            this.setState({\n                posted: false,\n            })\n        }else{\n            this.setState({\n                posted: true,\n            })\n        }\n    }\n\n\n    render(){\n        let fields;\n\n        if(!this.state.posted){\n            fields = this.generateFields();\n        }else{\n            let vals = this.getVals();\n            fields = this.makePostComps(vals);\n        }\n\n        return (\n            <div className=\"section\" id={this.props.sectionID}>\n                <p className=\"form-title\">{this.props.sectionName}</p>\n                <form>\n                    {fields}\n                    <button type=\"submit\" onClick={this.onPost}>Submit Section</button>\n                </form>\n\n            </div>\n        )\n    }\n}\n\nexport default Section;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,MAAM,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,OAAO,SAASN,SAAS,CAAC;EAC5BO,WAAWA,CAACC,KAAK,EAAC;IACd,KAAK,CAACA,KAAK,CAAC;IAEZ,IAAI,CAACC,KAAK,GAAG;MACTC,MAAM,EAAE;IACZ,CAAC;IAED,IAAI,CAACC,cAAc,GAAG,IAAI,CAACA,cAAc,CAACC,IAAI,CAAC,IAAI,CAAC;IACpD,IAAI,CAACC,aAAa,GAAG,IAAI,CAACA,aAAa,CAACD,IAAI,CAAC,IAAI,CAAC;IAClD,IAAI,CAACE,OAAO,GAAG,IAAI,CAACA,OAAO,CAACF,IAAI,CAAC,IAAI,CAAC;IACtC,IAAI,CAACG,MAAM,GAAG,IAAI,CAACA,MAAM,CAACH,IAAI,CAAC,IAAI,CAAC;EACxC;EAGAD,cAAcA,CAAA,EAAW;IAAA,IAAVK,IAAI,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;IACpB,MAAMG,MAAM,GAAG,IAAI,CAACZ,KAAK,CAACY,MAAM;IAEhC,MAAMC,UAAU,GAAGD,MAAM,CAACE,GAAG,CAAC,CAACC,KAAK,EAAEC,CAAC,KAAG;MACtC,IAAIC,GAAG,GAAG,EAAE;MAEZ,IAAGT,IAAI,CAACQ,CAAC,CAAC,EAAC;QACPC,GAAG,GAAGT,IAAI,CAACQ,CAAC,CAAC;MACjB;MAEA,oBACInB,OAAA,CAACJ,KAAK;QAACyB,IAAI,EAAEH,KAAK,CAACG,IAAK;QAACC,SAAS,EAAEJ,KAAK,CAACI,SAAU;QAACC,IAAI,EAAEL,KAAK,CAACK,IAAK;QAAgBH,GAAG,EAAEA;MAAI,GAAnBtB,MAAM,EAAE;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAoB;IAEhH,CAAC,CAAC;IAEF,OAAOX,UAAU;EACrB;EAEAR,aAAaA,CAACG,IAAI,EAAC;IACf,MAAMI,MAAM,GAAG,IAAI,CAACZ,KAAK,CAACY,MAAM;IAEhC,MAAMa,SAAS,GAAGb,MAAM,CAACE,GAAG,CAAC,CAACC,KAAK,EAAEC,CAAC,KAAG;MACtC,oBAAOnB,OAAA,CAACH,WAAW;QAACyB,SAAS,EAAEJ,KAAK,CAACI,SAAU;QAAgBO,SAAS,EAAElB,IAAI,CAACQ,CAAC;MAAE,GAA7BrB,MAAM,EAAE;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAoC;IACpG,CAAC,CAAC;IAEF,OAAOC,SAAS;EACpB;EAEAnB,OAAOA,CAAA,EAAE;IACL,IAAIqB,QAAQ;IAEZ,IAAG,IAAI,CAAC1B,KAAK,CAACC,MAAM,EAAC;MACjB,MAAMyB,QAAQ,GAAGC,QAAQ,CAACC,gBAAgB,CAAE,IAAG,IAAI,CAAC7B,KAAK,CAAC8B,SAAU,+BAA8B,CAAC;IACvG;IAEA,MAAMtB,IAAI,GAAGuB,KAAK,CAACC,IAAI,CAACL,QAAQ,CAAC,CAACb,GAAG,CAAC,CAACmB,IAAI,EAAEjB,CAAC,KAAG;MAC7C,MAAMC,GAAG,GAAGgB,IAAI,CAACC,KAAK;MAGtB,OAAOjB,GAAG;IACd,CAAC,CAAC;IAEF,OAAOT,IAAI;EACf;EAEAD,MAAMA,CAAC4B,CAAC,EAAC;IACLA,CAAC,CAACC,cAAc,EAAE;IAElB,IAAG,IAAI,CAACnC,KAAK,CAACC,MAAM,EAAC;MACjB,IAAI,CAACmC,QAAQ,CAAC;QACVnC,MAAM,EAAE;MACZ,CAAC,CAAC;IACN,CAAC,MAAI;MACD,IAAI,CAACmC,QAAQ,CAAC;QACVnC,MAAM,EAAE;MACZ,CAAC,CAAC;IACN;EACJ;EAGAoC,MAAMA,CAAA,EAAE;IACJ,IAAI1B,MAAM;IAEV,IAAG,CAAC,IAAI,CAACX,KAAK,CAACC,MAAM,EAAC;MAClBU,MAAM,GAAG,IAAI,CAACT,cAAc,EAAE;IAClC,CAAC,MAAI;MACD,IAAIK,IAAI,GAAG,IAAI,CAACF,OAAO,EAAE;MACzBM,MAAM,GAAG,IAAI,CAACP,aAAa,CAACG,IAAI,CAAC;IACrC;IAEA,oBACIX,OAAA;MAAK0C,SAAS,EAAC,SAAS;MAACC,EAAE,EAAE,IAAI,CAACxC,KAAK,CAAC8B,SAAU;MAAAW,QAAA,gBAC9C5C,OAAA;QAAG0C,SAAS,EAAC,YAAY;QAAAE,QAAA,EAAE,IAAI,CAACzC,KAAK,CAAC0C;MAAW;QAAArB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACtD3B,OAAA;QAAA4C,QAAA,GACK7B,MAAM,eACPf,OAAA;UAAQuB,IAAI,EAAC,QAAQ;UAACuB,OAAO,EAAE,IAAI,CAACpC,MAAO;UAAAkC,QAAA,EAAC;QAAc;UAAApB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAChE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEL;EAEd;AACJ;AAEA,eAAe1B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}