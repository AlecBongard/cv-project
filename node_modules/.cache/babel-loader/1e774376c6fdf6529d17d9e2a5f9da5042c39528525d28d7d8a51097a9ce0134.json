{"ast":null,"code":"var _jsxFileName = \"/Users/alecbongard/webdev/repos/cv-project/src/components/Field.js\";\nimport react, { Component } from \"react\";\nimport \"../styles/field.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Field = () => {\n  function makeField() {\n    if (this.props.type === \"textarea\") {\n      return /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: this.props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 20\n      }, this);\n    } else {\n      if (this.props.isRequired) {\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: this.props.type,\n          name: this.props.name,\n          defaultValue: this.props.val,\n          onClick: this.props.onClick,\n          onChange: this.props.onChange,\n          placeholder: this.props.placeholder,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 24\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: this.props.type,\n          name: this.props.name,\n          defaultValue: this.props.val,\n          onClick: this.props.onClick,\n          onChange: this.props.onChange,\n          placeholder: this.props.placeholder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 24\n        }, this);\n      }\n    }\n  }\n};\n\n/*class Field extends Component {\n    constructor(props){\n        super(props);\n\n        this.makeField = this.makeField.bind(this);\n    }\n\n    makeField(){\n        if(this.props.type===\"textarea\"){\n            return <textarea name={this.props.name}></textarea>\n        }else{\n            if(this.props.isRequired){\n                return <input type={this.props.type}\n                name={this.props.name} \n                defaultValue={this.props.val}\n                onClick={this.props.onClick}\n                onChange={this.props.onChange}\n                placeholder={this.props.placeholder}\n                required/>\n            }else{\n                return <input type={this.props.type}\n                name={this.props.name} \n                defaultValue={this.props.val}\n                onClick={this.props.onClick}\n                onChange={this.props.onChange}\n                placeholder={this.props.placeholder}\n                />\n            }\n            \n        }\n    }\n\n    render(){\n        let labelClass;\n\n        if(this.props.isRequired){\n            labelClass = \"field-label label-required\";\n        }else{\n            labelClass = \"field-label\"\n        }\n\n        return(\n            <div className=\"input-wrap\">\n                <label htmlFor={this.props.name} className={labelClass}>{this.props.labelText}</label>\n                {this.makeField()}\n            </div>\n        )\n    }\n}\n*/\n_c = Field;\nexport default Field;\nvar _c;\n$RefreshReg$(_c, \"Field\");","map":{"version":3,"names":["react","Component","jsxDEV","_jsxDEV","Field","makeField","props","type","name","fileName","_jsxFileName","lineNumber","columnNumber","isRequired","defaultValue","val","onClick","onChange","placeholder","required","_c","$RefreshReg$"],"sources":["/Users/alecbongard/webdev/repos/cv-project/src/components/Field.js"],"sourcesContent":["import react, { Component } from \"react\";\nimport \"../styles/field.css\";\n\nconst Field = ()=>{\n    function makeField(){\n        if(this.props.type===\"textarea\"){\n            return <textarea name={this.props.name}></textarea>\n        }else{\n            if(this.props.isRequired){\n                return <input type={this.props.type}\n                name={this.props.name} \n                defaultValue={this.props.val}\n                onClick={this.props.onClick}\n                onChange={this.props.onChange}\n                placeholder={this.props.placeholder}\n                required/>\n            }else{\n                return <input type={this.props.type}\n                name={this.props.name} \n                defaultValue={this.props.val}\n                onClick={this.props.onClick}\n                onChange={this.props.onChange}\n                placeholder={this.props.placeholder}\n                />\n            }\n            \n        }\n    }\n}\n\n/*class Field extends Component {\n    constructor(props){\n        super(props);\n\n        this.makeField = this.makeField.bind(this);\n    }\n\n    makeField(){\n        if(this.props.type===\"textarea\"){\n            return <textarea name={this.props.name}></textarea>\n        }else{\n            if(this.props.isRequired){\n                return <input type={this.props.type}\n                name={this.props.name} \n                defaultValue={this.props.val}\n                onClick={this.props.onClick}\n                onChange={this.props.onChange}\n                placeholder={this.props.placeholder}\n                required/>\n            }else{\n                return <input type={this.props.type}\n                name={this.props.name} \n                defaultValue={this.props.val}\n                onClick={this.props.onClick}\n                onChange={this.props.onChange}\n                placeholder={this.props.placeholder}\n                />\n            }\n            \n        }\n    }\n\n    render(){\n        let labelClass;\n\n        if(this.props.isRequired){\n            labelClass = \"field-label label-required\";\n        }else{\n            labelClass = \"field-label\"\n        }\n\n        return(\n            <div className=\"input-wrap\">\n                <label htmlFor={this.props.name} className={labelClass}>{this.props.labelText}</label>\n                {this.makeField()}\n            </div>\n        )\n    }\n}\n*/\nexport default Field;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,KAAK,GAAGA,CAAA,KAAI;EACd,SAASC,SAASA,CAAA,EAAE;IAChB,IAAG,IAAI,CAACC,KAAK,CAACC,IAAI,KAAG,UAAU,EAAC;MAC5B,oBAAOJ,OAAA;QAAUK,IAAI,EAAE,IAAI,CAACF,KAAK,CAACE;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAY;IACvD,CAAC,MAAI;MACD,IAAG,IAAI,CAACN,KAAK,CAACO,UAAU,EAAC;QACrB,oBAAOV,OAAA;UAAOI,IAAI,EAAE,IAAI,CAACD,KAAK,CAACC,IAAK;UACpCC,IAAI,EAAE,IAAI,CAACF,KAAK,CAACE,IAAK;UACtBM,YAAY,EAAE,IAAI,CAACR,KAAK,CAACS,GAAI;UAC7BC,OAAO,EAAE,IAAI,CAACV,KAAK,CAACU,OAAQ;UAC5BC,QAAQ,EAAE,IAAI,CAACX,KAAK,CAACW,QAAS;UAC9BC,WAAW,EAAE,IAAI,CAACZ,KAAK,CAACY,WAAY;UACpCC,QAAQ;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAE;MACd,CAAC,MAAI;QACD,oBAAOT,OAAA;UAAOI,IAAI,EAAE,IAAI,CAACD,KAAK,CAACC,IAAK;UACpCC,IAAI,EAAE,IAAI,CAACF,KAAK,CAACE,IAAK;UACtBM,YAAY,EAAE,IAAI,CAACR,KAAK,CAACS,GAAI;UAC7BC,OAAO,EAAE,IAAI,CAACV,KAAK,CAACU,OAAQ;UAC5BC,QAAQ,EAAE,IAAI,CAACX,KAAK,CAACW,QAAS;UAC9BC,WAAW,EAAE,IAAI,CAACZ,KAAK,CAACY;QAAY;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAClC;MACN;IAEJ;EACJ;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjDAQ,EAAA,GA3BMhB,KAAK;AA6EX,eAAeA,KAAK;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}